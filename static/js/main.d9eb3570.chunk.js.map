{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9eb3570.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.msg} </strong>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                            </li> */}\r\n                        </ul>\r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-light\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n                    </div>\r\n                    <div className=\"form-check form-switch\">\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'light' ? 'dark' : 'light'} Mode</label>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: \"title here\",\r\n    aboutText: \"About\"\r\n};","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <div style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n            <div className=\"container\"  >\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === \"dark\" ? \"#0A1931\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"black\" }} id=\"myBox\" rows=\"9\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={handleUpClick}>Uppercase</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleLowClick}>Lowercase</button>\r\n            </div>\r\n\r\n            <div className=\"container my-3\">\r\n                <h2>Your Text summary</h2>\r\n                <p>{text.split(\" \").length} words and {text.length} Characters.</p>\r\n                <p>\r\n                    {0.008 * (text.split(\" \").length)} Minutes to read.\r\n                </p>\r\n                <h2>Preview</h2>\r\n                <p>{text || \"Enter something in the textbox above to preview it here.\"}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2100);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"#000\";\n      showAlert(\"Light Mode has been enabled\", \"info\");\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0A1931\";\n      document.body.style.color = \"#fff\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n\n      {/* <Switch> */}\n      {/* <Route exact path=\"/about\"> */}\n      {/* <About /> */}\n      {/* </Route> */}\n      {/* <Route exact path=\"/\"> */}\n      <div className=\"container my-4\">\n        <TextForm showAlert={showAlert}\n          heading=\"Enter the text below to analyze\"\n          mode={mode} />\n      </div>\n      {/* </Route> */}\n      {/* </Switch></Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}